{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","href","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Fragment","Dashboard","getProjects","projects","map","key","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","action","filter","backlog","projectSequence","initalState","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","match","params","getProject","updateProject","disabled","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","todoItems","inProgressItems","doneItems","i","length","status","ProjectBoard","getBacklog","BoardContent","console","log","projectNotFound","role","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","create_At","getProjectTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LoginRequest","login","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d3c7cde.chunk.js","sourcesContent":["import axios from \"axios\"\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"./types\"\n\nexport const createProject = (project, history) => async dispatch => {\n    try {\n        await axios.post(\"/api/project\", project);\n        history.push(\"/dashboard\")\n        dispatch({\n            type:GET_ERRORS,\n            payload: {}\n        })\n    } catch (err) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        })\n    }\n}\n\nexport const getProjects = () => async dispatch => {\n    const res = await axios.get(\"/api/project/all\")\n    dispatch ({\n        type: GET_PROJECTS,\n        payload: res.data\n    })\n}\n\nexport const getProject = (id, history) => async dispatch => {\n    try {\n        const res = await axios.get(`/api/project/${id}`)\n    dispatch({\n        type: GET_PROJECT,\n        payload: res.data\n    })\n    } catch (error) {\n        history.push(\"/dashboard\")\n    }   \n}\n\nexport const deleteProject = id => async dispatch => {\n\n    if(window.confirm(\"Are you sure? This will delete the project and all the data related to it\")) {\n        await axios.delete(`/api/project/${id}`)\n    dispatch({\n        type: DELETE_PROJECT,\n        payload: id\n    })\n    }\n}\n","export const GET_ERRORS = \"GET_ERRORS\"\nexport const GET_PROJECTS = \"GET_PROJECTS\"\nexport const GET_PROJECT = \"GET_PROJECT\"\nexport const DELETE_PROJECT = \"DELETE_PROJECT\"\n\nexport const GET_BACKLOG = \"GET_BACKLOG\";\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport {deleteProject} from '../../actions/projectActions'\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteProject(id)\n    }\n\n    render() {\n        const {project} = this.props \n        return (\n            <div className=\"container\">\n                        <div className=\"card card-body bg-light mb-3\">\n                            <div className=\"row\">\n                                <div className=\"col-2\">\n                                    <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                                </div>\n                                <div className=\"col-lg-6 col-md-4 col-8\">\n                                    <h3>{project.projectName}</h3>\n                                    <p>{project.description}</p>\n                                </div>\n                                <div className=\"col-md-4 d-none d-lg-block\">\n                                    <ul className=\"list-group\">\n                                        <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                                            <li className=\"list-group-item board\">\n                                                <i className=\"fa fa-flag-checkered pr-1\">  Project Board </i>\n                                            </li>\n                                        </Link>\n                                        <Link to={`/updateProject/${project.projectIdentifier}`}>\n                                            <li className=\"list-group-item update\">\n                                                <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                            </li>\n                                        </Link>\n                                        <a href=\"\">\n                                            <li className=\"list-group-item delete\" \n                                            onClick = {this.onDeleteClick.bind(this, project.projectIdentifier)}>\n                                                <i className=\"fa fa-minus-circle pr-1\">  Delete Project</i>\n                                            </li>\n                                        </a>\n                                    </ul>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nexport default connect(null, {deleteProject})(ProjectItem)","import React from 'react';\nimport {Link} from \"react-router-dom\"\nconst CreateProjectButton = () => {\n    return (\n        <React.Fragment>\n            <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                        Create a Project\n            </Link>\n        </React.Fragment>\n    )\n}\n\nexport default CreateProjectButton;","import React, { Component } from 'react'\nimport ProjectItem from './Project/ProjectItem'\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport { connect } from \"react-redux\"\nimport { getProjects } from \"../actions/projectActions\"\nimport PropTypes from \"prop-types\"\n\nclass Dashboard extends Component {\n\n    componentDidMount() {\n        this.props.getProjects()\n    }\n\n    render() {\n\n        const {projects} = this.props.project\n\n        return (\n            <div className=\"projects\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-12\">\n                    <h1 className=\"display-4 text-center\">Projects</h1>\n                    <br />\n                    <CreateProjectButton />\n                    <br />\n                    <hr />\n                    {/* Project Item Component */}\n                    {projects.map(project=>(\n                        <ProjectItem key={project.id} project={project}/>\n                    ))\n\n                    }\n                    {/* End of Project Item Component */}\n                </div>\n            </div>\n        </div>\n    </div>\n            \n        );\n    }\n}\n\nDashboard.propTypes= {\n    project: PropTypes.object.isRequired,\n    getProjects: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project: state.project\n\n})\nexport default connect(mapStateToProps, {getProjects })(Dashboard)\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: {}\n  });\n};","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityActions\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Personal Project Management Tool\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n\n","import {GET_ERRORS} from \"../actions/types\"\n\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state\n    }\n}","import { GET_PROJECTS } from \"../actions/types\"\nimport { GET_PROJECT } from \"../actions/types\"\nimport { DELETE_PROJECT } from \"../actions/types\"\n\n\n\nconst initialState = {\n    projects: [],\n    project: {}\n}\n\nexport default function (state = initialState, action) {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            }\n    \n        case GET_PROJECT:\n            return {\n                ...state,\n                project: action.payload\n            }\n        case DELETE_PROJECT:\n            return {\n                ...state,\n                projects: state.projects.filter(\n                    project => project.projectIdentifier !== action.payload\n                )\n            }\n        default:\n            return state;\n    }\n}","import {\n    GET_BACKLOG,\n    GET_PROJECT_TASK,\n    DELETE_PROJECT_TASK\n} from \"../actions/types\";\n\nconst initialState = {\n    project_tasks: [],\n    project_task: {}\n}\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case GET_BACKLOG:\n            return{\n                ...state,\n                project_tasks: action.payload\n            }    \n        case GET_PROJECT_TASK:\n            return {\n                ...state,\n                project_task: action.payload\n            }\n        case DELETE_PROJECT_TASK:\n            return {\n                ...state,\n                project_tasks: state.project_tasks.filter(\n                    project_task => project_task.projectSequence !== action.payload\n                  )\n            }\n        default:\n            return state;\n    }\n}","import { SET_CURRENT_USER } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}","import {combineReducers} from 'redux'\nimport errorReducer from \"./errorReducer\"\nimport projectReducer from './projectReducer'\nimport backlogReducer from './backlogReducer'\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers ({\n    errors: errorReducer,\n    project: projectReducer,\n    backlog: backlogReducer,\n    security: securityReducer\n})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initalState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initalState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;","import React, { Component } from 'react';\nimport { getProject, createProject } from '../../actions/projectActions'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport classnames from 'classnames'\n\nclass UpdateProject extends Component {\n    constructor() {\n        super()\n\n        this.state = {\n            id: \"\",\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        }\n        this.onChange = this.onChange.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors) {\n            this.setState({ errors: nextProps.errors })\n        }\n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        })\n    }\n\n    componentDidMount () {\n        const { id } = this.props.match.params\n        this.props.getProject(id, this.props.history)\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value})\n    }\n\n    onSubmit(e) {\n        e.preventDefault()\n\n        const updateProject = {\n            id: this.state.id,\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        }\n\n        this.props.createProject(updateProject, this.props.history)\n    }\n\n    render() { \n        const { errors } = this.state\n        return ( \n            <div className=\"container\">\n                <div className=\"project\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg \", {\"is-invalid\": errors.projectName})}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {\n                      errors.projectName && (\n                          <div className=\"invalid-feedback\">{errors.projectName}</div>\n                      )\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.projectIdentifier})}\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                  {\n                      errors.projectIdentifier && (\n                          <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>\n                      )\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.description})}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {\n                      errors.description && (\n                          <div className=\"invalid-feedback\">{errors.description}</div>\n                      )\n                  }\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.start_date})}\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                  {\n                      errors.start_date && (\n                          <div className=\"invalid-feedback\">{errors.start_date}</div>\n                      )\n                  }\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className={classnames(\"form-control form-control-lg\", {\"is-invalid\": errors.end_date})}\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                  {\n                      errors.end_date && (\n                          <div className=\"invalid-feedback\">{errors.end_date}</div>\n                      )\n                  }\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n         );\n    }\n}\n \nUpdateProject.propTypes = {\n    getProject: PropTypes.func.isRequired, \n    project: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    project: state.project.project,\n    errors: state.errors\n})\n\nexport default connect(mapStateToProps, { getProject, createProject })( UpdateProject)","\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSequence} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptanceCriteria}\n          </p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSequence\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSequence\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);","import axios from 'axios'\nimport { GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK,DELETE_PROJECT_TASK } from \"./types\"\n\nexport const addProjectTask = (backlog_id, project_task, history) => async dispatch => {\n    try{\n        await axios.post(`/api/backlog/${backlog_id}`, project_task);\n        history.push(`/projectBoard/${backlog_id}`);\n\n        dispatch({\n            type:GET_ERRORS,\n            payload: {}\n        })\n    } catch(err) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        })\n    }\n}\n\nexport const getBacklog = backlog_id => async dispatch => {\n    try {\n        const res = await axios.get(`/api/backlog/${backlog_id}`)\n        dispatch({\n            type: GET_BACKLOG,\n            payload: res.data\n        })\n    } catch (err) {\n        dispatch({\n            type:GET_ERRORS,\n            payload:err.response.data\n        })\n    }\n}\n\nexport const getProjectTask = (\n    backlog_id,\n    pt_id,\n    history\n  ) => async dispatch => {\n    try {\n      const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n      dispatch({\n        type: GET_PROJECT_TASK,\n        payload: res.data\n      });\n    } catch (err) {\n      history.push(\"/dashboard\");\n    }\n  };\n\n  export const updateProjectTask = (\n    backlog_id,\n    pt_id,\n    project_task,\n    history\n  ) => async dispatch => {\n    try {\n      await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n      history.push(`/projectBoard/${backlog_id}`);\n      dispatch({\n        type: GET_ERRORS,\n        payload: {}\n      });\n    } catch (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    }\n  };\n\n  export const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n    if (\n      window.confirm(\n        `You are deleting project task ${pt_id}, this action cannot be undone`\n      )\n    ) {\n      await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n      dispatch({\n        type: DELETE_PROJECT_TASK,\n        payload: pt_id\n      });\n    }\n  };","import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask'\n\nclass Backlog extends Component {\n    render() {\n      const { project_tasks } = this.props\n      const tasks = project_tasks.map(project_task => (\n        <ProjectTask key={project_task.id} project_task={project_task} />\n      ))\n\n      let todoItems = [];\n      let inProgressItems = [];\n      let doneItems = [];\n\n      for (let i = 0; i < tasks.length; i++) {\n        if(tasks[i].props.project_task.status === \"TO_DO\"){\n          todoItems.push(tasks[i])\n        }\n        if(tasks[i].props.project_task.status === \"IN_PROGRESS\"){\n          inProgressItems.push(tasks[i])\n        }\n        if(tasks[i].props.project_task.status === \"DONE\"){\n          doneItems.push(tasks[i])\n        }\n\n      }\n        return (\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                      <div className=\"card-header bg-secondary text-white\">\n                        <h3>TO DO</h3>\n                      </div>\n                    </div>\n                    {todoItems}\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                      <div className=\"card-header bg-primary text-white\">\n                        <h3>In Progress</h3>\n                      </div>\n                    </div>\n                    {inProgressItems}\n                  </div>\n                  <div className=\"col-md-4\">\n                    <div className=\"card text-center mb-2\">\n                      <div className=\"card-header bg-success text-white\">\n                        <h3>Done</h3>\n                      </div>\n                    </div>\n                    {doneItems}\n                  </div>\n                </div>\n              </div>\n        )\n    }\n}\n\nexport default Backlog\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\"\nimport { connect } from \"react-redux\"\nimport { getBacklog } from \"../../actions/backlogActions\"\n \nclass ProjectBoard extends Component {\n\n  // constructor to handle error\n  constructor() {\n    super()\n    this.state = {\n      errors: {}\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params\n    this.props.getBacklog(id)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors})\n    }\n  }\n  \n    render() { \n        const { id } = this.props.match.params;\n        const { project_tasks } = this.props.backlog;\n        const { errors } = this.state\n        console.log(errors)\n        console.log(this.state)\n        console.log(project_tasks)\n\n        let BoardContent\n\n        const boardAlgorithm = (errors, project_tasks) => {\n          if (project_tasks.length < 1) {\n            if (errors.projectNotFound) {\n              return (\n                <div className=\"alert alert-danger text-center\" role=\"alert\">\n                {errors.projectNotFound}\n              </div>\n              )\n            } else if (errors.projectIdentifier){\n              return (<div className=\"alert alert-info text-center\" role=\"alert\">\n                No Project Tasks in this board\n              </div>)\n            }\n          } else {\n            return <Backlog project_tasks = { project_tasks }/>\n          }\n        }\n\n        BoardContent = boardAlgorithm(errors, project_tasks)\n\n        return (\n          <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n})\n \nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux'\nimport classnames from 'classnames'\nimport { addProjectTask } from '../../../actions/backlogActions' \n \nclass AddProjectTask extends Component {\n\n  constructor(props){\n\n    super(props)\n    const {id} = this.props.match.params\n\n    this.state = {\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    }\n    this.onChange = this.onChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n  }\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value})\n  }\n  // on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    console.log(newTask)\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n\n    render() { \n        const { errors } = this.state;\n        const { id } = this.props.match.params;\n        // console.log(this.props.match.params);\n        // console.log(id)\n        // console.log(this.props)\n        \n        return ( \n            <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                     type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\":errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {\n                    errors.summary && (\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\n                    )\n                  }\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n         );\n    }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n})\n \nexport default connect(mapStateToProps, {addProjectTask})(AddProjectTask);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSequence: \"\",\n      summary: \"\",\n      acceptanceCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n\n    const {\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSequence,\n      summary,\n      acceptanceCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSequence: this.state.projectSequence,\n      summary: this.state.summary,\n      acceptanceCriteria: this.state.acceptanceCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSequence,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSequence}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptanceCriteria\"\n                    value={this.state.acceptanceCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">\n                  Personal Project Management Tool\n                </h1>\n                <p className=\"lead\">\n                  Create your account to join active projects or start your own\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityActions\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport Header from './components/Layout/Header';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport AddProject from './components/Project/AddProject';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport UpdateProject from './components/Project/UpdateProject'\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard'\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask'\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask'\nimport Landing from \"./components/Layout/Landing\"\nimport Register from \"./components/UserManagement/Register\"\nimport Login from \"./components/UserManagement/Login\"\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from \"./actions/types\";\nimport { logout } from \"./actions/securityActions\";\nimport SecuredRoute from \"./securityUtils/SecuredRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n      <div className=\"App\">\n        <Header />\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/register\" component={Register} />\n        <Route exact path=\"/login\" component={Login} />\n        {/* <Dashboard /> */}\n        <Switch>\n        <SecuredRoute exact path=\"/addProject\" component={AddProject}/>\n        <SecuredRoute exact path=\"/dashboard\" component={Dashboard}/>\n        <SecuredRoute exact path=\"/updateProject/:id\" component={UpdateProject}/>\n        <SecuredRoute exact path=\"/projectBoard/:id\" component={ProjectBoard}/>\n        <SecuredRoute exact path=\"/addProjectTask/:id\" component={AddProjectTask}/>\n        <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_id\" component={UpdateProjectTask}/>\n        </Switch>\n      </div>\n      </Router>\n    </Provider>\n    \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}